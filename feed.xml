<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://klurpicolo.github.io/</id><title>Just my note</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2023-11-19T15:10:08+08:00</updated> <author> <name>Warit Boonmasiri</name> <uri>https://klurpicolo.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://klurpicolo.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://klurpicolo.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator> <rights> © 2023 Warit Boonmasiri </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Java util.concurrent package</title><link href="https://klurpicolo.github.io/posts/java-concurrent-package/" rel="alternate" type="text/html" title="Java util.concurrent package" /><published>2022-12-03T23:00:00+08:00</published> <updated>2022-12-03T23:00:00+08:00</updated> <id>https://klurpicolo.github.io/posts/java-concurrent-package/</id> <content src="https://klurpicolo.github.io/posts/java-concurrent-package/" /> <author> <name>Warit Boonmasiri</name> </author> <category term="java" /> <summary> JAVA concurrent java.util.concurrent is package that provides classes/interfaces that related to concurrent execution Important interfaces/classes Respresent the object that can execute the given task(either current therad or another thread) Executor : Object that can run a given task(Runnable). ExecutorService : More useful method than Executor. It provides methods to summit task, then g... </summary> </entry> <entry><title>Pandas 101</title><link href="https://klurpicolo.github.io/posts/pandas-basic/" rel="alternate" type="text/html" title="Pandas 101" /><published>2022-11-28T23:00:00+08:00</published> <updated>2022-12-04T17:08:24+08:00</updated> <id>https://klurpicolo.github.io/posts/pandas-basic/</id> <content src="https://klurpicolo.github.io/posts/pandas-basic/" /> <author> <name>Warit Boonmasiri</name> </author> <category term="datascience" /> <summary> What Pandas is Pandas is python library for data analysis. Its name came from “panel data”. We can import data from various source into datastructure so called “DataFrame” and do computation/manipulation operations on them as we wish. The basics DataFrame is the core class which consists Series(similiar to column) Series is column of DataFrame Read/Access operaions Useful method to disp... </summary> </entry> <entry><title>Scala 101</title><link href="https://klurpicolo.github.io/posts/scala-basic/" rel="alternate" type="text/html" title="Scala 101" /><published>2022-11-20T23:00:00+08:00</published> <updated>2023-11-19T15:07:57+08:00</updated> <id>https://klurpicolo.github.io/posts/scala-basic/</id> <content src="https://klurpicolo.github.io/posts/scala-basic/" /> <author> <name>Warit Boonmasiri</name> </author> <category term="scala" /> <summary> Scala Scala is a language that base on JVM Scala is functional language that inherit from Haskell Functions are first class citicen in Scala val, var, def, lazy val val : val is immutable data type, evaluates only once var : var is mutable def : is method, evaluates every time it gets called lazy val : similar to val, but the value is evaluates once when the first access is ca... </summary> </entry> <entry><title>Scala Generic</title><link href="https://klurpicolo.github.io/posts/scala-generic/" rel="alternate" type="text/html" title="Scala Generic" /><published>2022-11-13T23:00:00+08:00</published> <updated>2022-11-13T23:00:00+08:00</updated> <id>https://klurpicolo.github.io/posts/scala-generic/</id> <content src="https://klurpicolo.github.io/posts/scala-generic/" /> <author> <name>Warit Boonmasiri</name> </author> <category term="scala" /> <summary> Scala Generic Scala type system support generic. Generic classes are classes that take a type(s) as parameter. For example, List[T], Seq[T], Option[T]. The following code will be used as an example for the rest of this article. trait Animal abstract class Mammal extends Animal { def name(): String } case class Dog(name: String) extends Mammal case class Cat(name: String) extends Mammal abs... </summary> </entry> <entry><title>Big O</title><link href="https://klurpicolo.github.io/posts/big-o/" rel="alternate" type="text/html" title="Big O" /><published>2022-03-10T23:00:00+08:00</published> <updated>2022-03-10T23:00:00+08:00</updated> <id>https://klurpicolo.github.io/posts/big-o/</id> <content src="https://klurpicolo.github.io/posts/big-o/" /> <author> <name>Warit Boonmasiri</name> </author> <category term="misc" /> <summary> Analysis of Algorithms The naive way to compare the performanace of 2 algorithms is to run both of them by given the same input and measure time or space that they use. This is quite not effective some algorithms might good at small dataset but get worse at large or vise versa. To measure performance of algorithms, we use Asymptotic analysis to do. It’s mathematical analysis on algorithms f(n) ... </summary> </entry> </feed>
